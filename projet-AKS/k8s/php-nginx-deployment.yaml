apiVersion: apps/v1
kind: Deployment
metadata:
  name: php-nginx-deployment
  labels:
    app.kubernetes.io/name: php-nginx
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: projet-AKS
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: php-nginx
      app.kubernetes.io/component: server
      app.kubernetes.io/part-of: projet-AKS
  template:
    metadata:
      labels:
        app.kubernetes.io/name: php-nginx
        app.kubernetes.io/component: server
        app.kubernetes.io/part-of: projet-AKS
    spec:
      volumes:
        - name: nginx-config-volume
          configMap:
            name: app-config
      initContainers:
        - name: init-mysql
          env:
            - name: DB_URL 
              valueFrom: 
                secretKeyRef: 
                  name: app-config 
                  key: db_url
        - name: MYSQL_ROOT_PASSWORD 
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_ROOT_PASSWORD
          image: aminou/projet-AKS-php-fpm
          command:
            - 'sh'
            - '-c'
            - |
              until nc -z mysql-service 3306;
              do 
                echo "Waiting for mysql";
                sleep 2;
              done;
              echo "mysql is ready";
              php /app/data/migration.php
              echo "seed script executed";
      containers:
      - name: php-fpm
        image: aminou/projet-AKS-php-fpm
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 9000
        env:
          - name: DB_URL 
            valueFrom: 
              secretKeyRef: 
                name: app-config 
                key: db_url
          - name: MYSQL_ROOT_PASSWORD 
            valueFrom:
              secretKeyRef:
                name: mysql-secret
                key: MYSQL_ROOT_PASSWORD
      - name: nginx 
        image: aminou/projet-AKS-nginx
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
          - containerPort: 80
        volumeMounts:
        - name: nginx-config-volume 
          mountPath: /etc/nginx/conf.d/default.conf 
          subPath: nginx.conf
    imagePullSecrets:
      - name: docker-hub-secret
